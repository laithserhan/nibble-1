pico-8 cartridge // http://www.pico-8.com
version 18
__lua__
--nibble in cyberspace
--digipres adventures, vol 1
--by @beet_keeper

--two modes
--memory destruction can happen
--using different strategies.
--
--graphics-first = true
--random         = false
mode=true

--platform
map_x=0
map_spd=1
--foreground
fg1_x=0
fg1_spd=0.5
fg2_x=0
fg2_spd=0.25
--borders
ytop=16
ybottom=8*13
--music
flipside=0
fliptick=30*15
music_on=false
tracks={1,2,3}
track=0
--backgrond color
bg = {1,}

function change_music()
	flipside=_tick(flipside,fliptick)
 if flipside == 0 then
  track=flr(rnd(#tracks))
  if music_on==true then
			music(track)
		end
 end 
end

function _init()
 --player position
 nibble.xpos = 10
 nibble.ypos = 64
 --memory destroy
 memloc = 0
 init_destroy() 
 --random bg color
 bgcol = bg[flr(rnd(#bg))+1]
 --organize music
 track=flr(rnd(#tracks))
 if music_on==true then
 	music(track)
 end
end

function _update()
	if splash then
	 _update_splash()		
	else
	 --perform game functions	
	 if (btn(0) and nibble.xpos > 0) nibble.xpos -= 2
	 if (btn(1) and nibble.xpos < 120) nibble.xpos += 1
	 if (btn(2) and nibble.ypos > ytop) nibble.ypos -= 1
	 if (btn(3) and nibble.ypos < ybottom) nibble.ypos += 1
	 fg2_x-=fg2_spd
	 if fg2_x<-127 then fg2_x=0 end
	 fg1_x-=fg1_spd
	 if fg1_x<-127 then fg1_x=0 end  
	 map_x-=map_spd
	 if map_x<-127 then map_x=0 end
	 change_music()
	end
end

function _draw()
 if splash then
		_draw_splash() 
 else
	 cls(bgcol)
	 --put map on screen
	 map(32,0,fg2_x,0,16,16)
	 map(32,0,fg2_x+128,0,16,16) 	 
  --parallax with more bg
	 map(16,0,fg1_x,0,16,16)
	 map(16,0,fg1_x+128,0,16,16)  
	 --platform
	 map(0,0,map_x,0,16,16)
	 map(0,0,map_x+128,0,16,16) 
	 --drawing functions
		draw_nibble() 
		draw_bad()
	 draw_good()
	 --collision detection
	 ifbad(nibble)
	 ifgood(nibble)
	 --score output
	 output_score()
	 output_item() 		
		--monitoring
		draw_monitoring()
  --test_mem()
	end
end
-->8
--helper functions

// tickcount 30 is one second
// as we update 30 times per 
// second.
function _tick(tick,limit)
 if tick==0 then
  tick=limit
  return tick
 end
 return tick-1
end

--set splash screen on
splash=true
warning=true
info_=true

-- nibble
selector={
	ystart=70,
 xpos=73,
 ypos=70,
 sprite=39,
}

smove=0
smovetick=6
function _rotate()
	smove=_tick(smove,smovetick)
 if smove==0 then
		if selector.sprite!=45 then
		 selector.sprite=selector.sprite+1
		else
		 selector.sprite=39
		end
	end
end

--modes as symbols, home: ‚åÇ=k
--‚òâ=i,üÖæÔ∏è=o,‚óÜ=p,üòê=m
--‚òÖ=s,‚úΩ=f,‚ô•=h,ÏõÉ=j
mode="‚åÇ"
_mode=0
max_mode=3
modes={
 "‚åÇ", --0
 "‚úΩ", --1
 "‚òâ", --2
 "üòê", --3
 "‚óÜ", --4
 "ÏõÉ", --5
}

function _set_mode_x()
 if _mode < max_mode then
  _mode+=1
 else
  _mode=0
 end 
 --table index begins at 1
 mode=modes[_mode+1]
 printh(_mode)
end

function _selector()
 --game start or set game mode
	if warning then
	 if (btnp(5) and selector.ypos == selector.ystart) then		
		 warning=false
 	end		
		return
	end

	if info_ and not warning then
	 if (btnp(5) and selector.ypos == selector.ystart) then		
		 info_=false
 	end		
		return
	end

	if (btnp(2) and selector.ypos != selector.ystart) then
		selector.ypos -= 10
	end
	if (btnp(3) and selector.ypos == selector.ystart) then		
		selector.ypos += 10
	end
	if (btnp(5) and selector.ypos == selector.ystart) then		
		splash=false
  --set the music on here
		music_on=true
		music(track)
	end	
	if (btnp(5) and selector.ypos != selector.ystart) then
	 _set_mode_x()
	end
end

function _update_splash()
	_selector()
	_rotate()
end

function _draw_splash()

 if warning then
	 cls(0)
		print("warning", 48,33, 8)	 
		warn=[[
because of the unpredictable 
nature of this game it may 
not be suitable for players 
with photosensitive epilepsy, 
and may trigger seizures.
		 ]]
		print(warn, 10,43, 6)
		print("press ‚ùé to begin", 30,93, 7)
 	return
 end

 if info_ and not warning then
	 cls(0)
		print("information", 45,33, 9)	 
		warn=[[
this game will corrupt its 
own memory. until it 
eventually stops. this is
entirely safe for your
computer and part of the 
in-game experience --enjoy!
		 ]]
		print(warn, 10,43, 6)
		print("press ‚ùé to begin", 30,93, 7)
 	return
 end

	cls(1)
	--todo configure a music track		

 --dashboard
 map(80,0,0,0,127,127)  
 print("\130:" .. mode, 2,5,6)
 --platform
 map(49,0,32,35,9,4) 
 --floor
 map(64,1,32,92,9,4)  
 --nibble in cyberspace 
	print("\78\73\66\66\76\69 \73\78\10\67\89\66\69\82\83\80\65\67\69\10", 52, 36, 8)
	--digipres adventure
	print("#\68\73\71\73\80\82\69\83", 46, 94, 14)
 print("\65\68\86\69\78\84\85\82\69", 46, 99, 14) 
	print("‚òÖ", 35, 96, 10)
	print("‚òÖ", 85, 96, 10)
 --start demo settings
	print("start", 48,73, 9)
	print("mode", 48,82, 9)
	spr(selector.sprite, 
	    selector.xpos, 
	    selector.ypos)		
end
-->8
--characters

max_rogues=6
max_heroes=3

--bad actors table
bad_t={}
--good actors table
good_t={}

--copy table function
function copy(orig)
 local orig_type=type(orig)
 local copy
 if orig_type == 'table' then
  copy={}
  for orig_key, orig_value in pairs(orig) do
   copy[orig_key] = orig_value
  end
 else -- number, string, boolean, etc
  copy=orig
 end
 return copy
end

chardata={
 sprite=0,
 xy=0,
 xpos=0,
 ypos=0,
 speed=0,
 sound=0,
 name="",
 col=0,
 score=0,
}

virus={
 name="virus",
 sprite=31,
 sound=3,
 score=-50,
 col=8,
}

bug={
 name="software bug",
 sprite=36,
 sound=3,
 score=-60,
 col=8,
}

elec={
 name="power surge",
 sprite=32,
 sound=5,
 score=-40,
 col=8,
}

rain={
 name="disaster",
 sprite=33,
 sound=6,
 score=-15,
 col=8,
}

sun={
 name="solar flare",
 sprite=38,
 sound=7,
 score=-100,
 col=8,
}

bad={
 virus, 
 bug, 
 elec, 
 rain,
 sun,
}

lockss={
 name="lockss!!!",
 sprite=5,
 sound=4,
 score=50,
 col=11,
}
 
checksum={
 name="fixity check", 
 sprite=6,
 sound=4,
 score=40,
 col=11,
}
 
backup={
 name="local backup",
 sprite=7,
 sound=4,
 score=60,
 col=11,
}
 
strategy={
 name="dp strategy",
 sprite=12,
 sound=4,
 score=60,
 col=11,
}

policy={
 name="dp policy",
 sprite=37,
 sound=4,
 score=60,
 col=11,
}

good={
 lockss, 
 checksum, 
 backup, 
 strategy,
 policy,
}

function draw_spr(s)
 s.xpos=s.xpos-(s.speed+1)
	spr(s.sprite, s.xpos, s.ypos)
	s.xy=get_shortcoords(s.xpos,s.ypos)	
end

function draw_c(t, carr, max_c)
 if #t < max_c then
  spr_c=get_cell()
  if #t > 0 then
   for i in all(t) do
	   --printh(i.data.xy .. " xx:" .. spr_c[1])
    if i.xy == spr_c[1] then
     draw_c(t,carr, max_c)
    end
   end
  end
  --create references to our sprites
	 local char=flr(rnd((#carr)))+1
  local c=copy(chardata)
  c.name=carr[char].name
  c.col=carr[char].col
  c.sprite=carr[char].sprite
  c.sound=carr[char].sound
  c.xy=spr_c[1]
		c.xpos=spr_c[2]
		c.ypos=spr_c[3]
		c.speed=rnd(1)
		c.score=carr[char].score
	 add(t,c)	  
 end
 for sp in all(t) do  
  draw_spr(sp)
  if sp.xpos < 0 then
   del(t,sp)
  end
 end
end

function draw_bad()
 draw_c(bad_t, bad, max_rogues)
end

function draw_good()
 draw_c(good_t, good, max_heroes)
end

function sort_x(t)
 local c=nil
 for coord in all(t) do
   if nibble.ypos>=coord.ypos 
   and nibble.ypos+1<=coord.ypos+7 
   then      	 
		  if not c then
		   c=coord		  
		  else
   	 if coord.xpos < c.xpos then
    	 c=coord
    	end
   	end
   end
 end
 if c then
	 del(t, c)
	 score=score-c.score
	 c=nil
	 sfx(9)
	 return true
	end
end

function hit_em_up()
 del_ = sort_x(good_t)
 if not del_ then
	 sort_x(bad_t) 
	end
end
-->8
--score functions and dashboard

score=0
score_count=0
score_tick=15
function output_score()
	_score= "score: " .. score
	score_count=_tick(score_count,score_tick)
 if score_count == 0 then
  score = score + 1
 end
	print(_score, 2, 5, 6)
end

item=0
item_col=0
function output_item()
 if item != 0 then
  pos=#item*3
  print(item, 115-pos, 5, item_col)
 end
end
-->8
--coords grid module

xcoords={
 {"a",0},
	{"b",8},
	{"c",16},
	{"d",24},
	{"e",32},
	{"f",40},
	{"g",48},
	{"h",56},
	{"i",64},
	{"j",72},
	{"k",80},
	{"l",88},
	{"m",96},
	{"n",104},
	{"o",112},
	{"p",120},
	{"q",128},	
}

--todo: figure out an approach
--here, a,b,n,o,p rows not available.
ycoords={
	{"c",16},
	{"d",24},
	{"e",32},
	{"f",40},
	{"g",48},
	{"h",56},
	{"i",64},
	{"j",72},
	{"k",80},
	{"l",88},
	{"m",96},
	{"n",104},
}

function _get_r(t)
 return t[flr(rnd(#t)+1)]
end

function get_cell()
 local x=_get_r(xcoords)
 local y=_get_r(ycoords)
 local c=x[1] .. y[1]
 return {
  c,
  x[2],
  y[2],
 }
end

--reverse lookup coords of 
--eg input value "cc".
function reverse_coords(c)
	local x=sub(c,1,1)
	local y=sub(c,2,2)
	for i in all(xcoords) do
	 if i[1] == x then
	  x=i[2]
	  break
	 end
	end 
	for i in all(ycoords) do
	 if i[1] == y then
	  y=i[2]
	  break
	 end
	end
	return {x,y}	
end

--return shortcode for coords
--e.g input value 127,127 = qq
function get_shortcoords(x,y,debug)
 if debug then
		printh("x" .. x)
		printh("y" .. y)
	end
	for c in all(xcoords) do
	 --check for less than as all
	 --points are in order and
	 --result will be in that range
	 if x <= c[2] then	  
   if debug then
   	printh("orig " .. x .. " " .. c[1])   
   end
	  x=c[1]
	  break
	 end
	end
	for c in all(ycoords) do
	 if y <= c[2] then
   if debug then
   	printh("orig " .. y .. " " .. c[1])   
   end	  	
	  y=c[1]
	 	break
	 end
	end
	return x .. y
end
-->8
--collision detection

function ifcoll(nibble,t,bad)
 for c in all(t) do
  if (
   nibble.xpos>=c.xpos or
   nibble.xpos+8>=c.xpos)
  and nibble.xpos<=c.xpos+8
  and (
   nibble.ypos>=c.ypos or
   nibble.ypos+8>=c.ypos)
  and nibble.ypos<=c.ypos+8
  then
   if bad then
    destroy_mem()
   end
   if not bad then
    sprite_fix()
   end
   item=c.name
   item_col=c.col
   score=score+c.score
   sfx(c.sound)
   del(t,c)
  end
 end
end

function ifbad(nibble)
 ifcoll(nibble,bad_t,true)
end

function ifgood(nibble)
 ifcoll(nibble,good_t)
end
-->8
--nibble

-- nibble
nibble = {
 xy=0,
 xpos=0,
 ypos=0,
 trouble=3,
 troublealt=4,
 main=1,
 alt=2,
 sprite=1,
 height=1,
 width=1,
 monitoring={53,54},
}

function draw_nibble()
	if score < 0 then
	 if nibble.sprite == nibble.trouble then
	  nibble.sprite = nibble.troublealt
	 else
	  nibble.sprite = nibble.trouble
	 end
	end	
	if score >= 0 then
	 if nibble.sprite == nibble.main then
	  nibble.sprite = nibble.alt
	 else
	  nibble.sprite = nibble.main
	 end
	end
	--if mnnitoring is toggled
	--interrupt here to make sure
	--montiroing sprite is shown
	if monitor_count != 0 then
  mon=flr(rnd(#nibble.monitoring+1))
		nibble.sprite=
		nibble.monitoring[mon]	
 end
	spr(nibble.sprite, nibble.xpos, nibble.ypos, nibble.height, nibble.width)
 nibble.xy=get_shortcoords(nibble.xpos,nibble.ypos)
end

monitor_={
 name="monitoring",
 sound=8,
 col=6,
}

monitor_t=0
monitor_count=0
function draw_monitoring()
		monitor_count=_tick(monitor_count,monitor_t)
  if monitor_count==0 then  
	  monitor_t=0
  end
		if (btnp(4)) then
	  monitor_t=10
   sfx(monitor_.sound)
   hit_em_up()
			item=monitor_.name
			item_col=monitor_.col
  end
end
-->8
--destroy memory

--start	 end	   purpose
--0x0	   0x0fff	sprite sheet (0-127)
--0x1000	0x1fff	sprite sheet (128-255) / map (rows 32-63) (shared)
--0x2000	0x2fff	map (rows 0-31)
--0x3000	0x30ff	sprite flags
--0x3100	0x31ff	music
--0x3200	0x42ff	sound effects
--0x4300	0x5dff	general use (or work ram)
--0x5e00	0x5eff	persistent cart data (64 numbers = 256 bytes)
--0x5f00	0x5f3f	draw state
--0x5f40	0x5f7f	hardware state
--0x5f80	0x5fff	gpio pins (128 bytes)
--0x6000	0x7fff	screen data (8k)

max_mem=32767

--record state.
state={}
memory={
 pos=0,
 val=0,
}

function init_destroy()
	newbyte=flr(rnd(255))
end

function destroy_mem()
	--debug
	--test_mem() 
 if _mode==0 then
  printh("default destroy")
  default_destroy()
 elseif _mode==1 then
  printh("sprite destroy")
  sprite_destroy()
 elseif _mode==2 then
  printh("chaos destroy") 
  chaos_destroy()
 elseif _mode==3 then
  printh("null destroy") 
  null_destroy()  
 end
end

function default_destroy()
 init_destroy()
 for x = memloc,memloc+15 do
 	poke(memloc, newbyte)
 	memloc += 1
 	--printh(peek(memloc))
 end
end

--destroy memory at random,
--add to list.
function sprite_destroy()
 local blocksize=20
 local loc=0
 for i=0,blocksize do
  if not mode then
   loc = flr(rnd(max_mem))
  else
   loc=#state+15
  end
  for x in all(state) do
   if x.pos == loc then
    sprite_destroy()
   end
  end
  local mem=copy(memory)
  mem.pos=loc
  mem.val=peek(loc)
  add(state,mem)
  poke(loc,newbyte)
 end
end

function chaos_destroy()
 init_destroy()
 col=newbyte
 max_mem=32727
 local loop=0
 local memloc = flr(rnd(max_mem))
 for x = loop,loop+15 do
 	if memloc < max_mem then
   --printh("loop: " .. loop) 
  	poke(memloc, col)
	  --printh(memloc)
 	 --printh(peek(memloc))
			memloc = flr(rnd(max_mem)) 	 
 	 loop+=1
  else
   return
  end 
 end 
end

function null_destroy()
 n={55,56,57,58,59,60,61}
 col=n[flr(rnd(#n))+1]
 max_mem=32727
 local loop=0
 local memloc = flr(rnd(max_mem))
 for x = loop,loop+30 do
 	if memloc < max_mem then
   --printh("loop: " .. loop) 
  	poke(memloc, col)
	  --printh(memloc)
 	 --printh(peek(memloc))
			memloc = flr(rnd(max_mem)) 	 
 	 loop+=1
  else
   return
  end 
 end 
end

--recover memory fifo.
function sprite_fix()
 local blocksize=5
 if #state > 0 then
  for x=0,blocksize do
   poke(state[1].pos,state[1].val)
   --this is breaking when
   --state[1]
   del(state,state[0])
  end  
 end
end

function test_mem()
 --good to put in a loop to 
 --test different memory
 --destroy functions
end

__gfx__
00000000066666000666660006666600066666000000000000828082000000000000000066666666226d26d222222222aaaa600000000001c0000000cc1c1ccc
00000000d5333330d5333330d5888880d588888088828888888282821666610016666100222222222222222222222222aaaa66000000001ccc000000c1c1ccc0
00700700d5333330d5333330d5888880d588888082008208808288821660611016606110226d26d2226d26d222222222addaaa00000001ccccc000001c1ccc00
00077000d6655560d6655560d6655560d66555608200888888820082166661101666611022222222226d26d222222222aaaaaa0000001cc1cccc0000c1ccc000
0007700096666600966666009666660096666600820082000882008211111110111111102222222222222222ddddddddadddaa000001cc1cccccc0001ccc0000
007007009060600090606000906060000060600088828200828288821777771017777710226d26d2226d26d266666666aaaaaa00001cc1c1cccccc00ccc00000
0000000000606000a060600000606000006060000000000000828082177777101777771022222222226d26d26663b666adddaa0001cc1c1cccccccc0cc000000
000000000010100000101000001010000010100000000000008288821ccccc101ccccc1022222222226d26d23b63b6b3aaaaaa001cc1c1ccccccccccc0000000
cccccccccccccccc999999990000000290000000999999999999999900000005d0000000dddddddd555555553b03b03b3b03b03b3b03b00000000000c000000c
0ccccccccccccccc999999990000002999000000999999900999999900000055dd0000000ddddddd555555500003b0000000000b0b000000166661000c0000c0
00cccccccccccccc999999990000029999900000999999000099999900000555ddd0000000dddddd555555003b00003b000000003b000000166061100cccccc0
000ccccccccccccc999999990000299299990000999990000009999900005555dddd0000000ddddd555550000000b03b3b03b03b0b00b03b16666110c88cc88c
0000cccccccccccc999999990002992999999000999900000000999900055555ddddd0000000dddd555500003b0000000000b0000b00b000111111100c8cc8c0
00000ccccccccccc999999990029929299999900999000000000099900555555dddddd0000000ddd555000003b03b03b000000003b03b03b1777771001cccc10
000000cccccccccc999999990299292999999990990000000000009905555555ddddddd0000000dd550000000000b00b3b03b03b0003b000177777100c1001c0
0000000ccccccccc999999992992929999999999900000000000000955555555dddddddd0000000d500000000000000b0b000000000000001444441000c11c00
0009aa900000000000bbbb0022222222c000000c55556000000a0000000000000000000000000000000000000000000000000000000000000066666666660000
009aa900005566000b0bbbb0666666660c0000c055556600000a9000166661000166600001160000016666100116000001666000166661000066666666660000
00aa9000066666600bbbb0b0dddddddd0cccccc05aa55500a900000a16606110016061000110100011606610011010000160610016606110dd55333333333300
0aa900000566665000bbbb3022222222cbbccbbc555555000a0a90a916666110016661000116100011666610011610000166610016666110dd55bbbbbbbbbb00
9aaaaa900056550000b33b30222222220cbccbc05aaa55000009a00011111110011111000111100011111110011110000111110011111110dd55bbbbbbbbbb00
0000a9000c0c0c000b0bb0b32222222201cccc10555555000a0000a017777710017771000117100011161110011710000177710017777710dd55333333333300
000a9000c0c0c000b3b30b3b222222220c1001c05aaa5500a909a09a17777710017771000117100011111110011710000177710017777710dd66665555556600
00a9000000000000b3b30b3b2222222200c11c00555555000000a00019999910019991000119100019999910011910000199910019999910dd66665555556600
222222226666666600000000828888820006000006666600066666007acbe8d5111111111111111111111111111111111111111170c0e0d09966666666660000
22222222dddddddd000000008288288200070000d5999990d5aaaaa07acbe8d511111111111111111111111111111111111111110a0b08059966666666660000
22222222222222220000000018288888006a6000d5999990d5aaaaa07acbe8d511111111111111111111111111111111111111117acbe8d59900660066000000
2222222222222222000000001111111167a9a760d6655560d66555607acbe8d5181818181c1c1c1c171717171a1a1a1a1919191970c0e0d09900660066000000
22222222222222226666666611188211006a6000b6666600b66666007acbe8d581818181c1c1c1c171717171a1a1a1a1919191910a0b0805aa00660066000000
dddddddd22222222dddddddd1111821100070000b0606000b06060007acbe8d511111111111111111111111111111111111111117acbe8d5aa00660066000000
666666662222222222222222182888210006000000606000006060007acbe8d511111111111111111111111111111111111111110a0b08050000110011000000
dddddddd2222222222222222111111110000000000101000001010007acbe8d5111111111111111111111111111111111111111170c0e0d00000110011000000
__label__
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22622222622222226662222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22666666622622266666222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22626662622222666666622222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22626662622622262626222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22266666222222262666222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111161111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111171111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
111111111111111111111111116a6111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111167a9a761111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
111111111111111111111111116a6111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111171111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111161111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111116111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111117111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1111111111111111116a611111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
111111111111111167a9a76111111111116666666666111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1111111111111111116a611111111111116666666666111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111117111111111111dd5533333333331111118811888188118811811188811111888188111111111111111111111111111111111111111111
11111111111111111116111111111111dd55bbbbbbbbbb1111118181181188118811811188111111181181811111111111111111111111111111111111111111
11111111111111111111111111111111dd55bbbbbbbbbb1111118181181181818181811181111111181181811111111111111111111111111111111111111111
11111111111111111111111111111111dd5533333333331111118181888188818881888188811111888181811111111111111111111611111111111111111111
11111111111111111111111111111111dd6666555555661111111111111111111111111111111111111111111111111111111111111711111111111111111111
11111111111111111111111111111111dd6666555555661111111111111111111111111111111111111111111111111111111111116a61111111111111111111
1111111111111111111111111111111199666666666611111111888181818811888188811881888188818881888111111111111167a9a7611111111111111111
11111111111111111111111111111111996666666666111111118111888188118811818181118181818181118811111111111111116a61111111111111111111
11111111111111111111111111111111991166116611111111118111118181818111881111818881888181118111111111111111111711111111111111111111
11111111111111111111111111111111991166116611111111118881888188818881818188118111818188818881111111111111111611111111111111111111
11111111111111111111111111111111aa1166116611111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111aa1166116611111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111666666666666666666666666666666666666666666666666666666666666666611111111111111111111111111111111
11111111111111111111111111111111222222222222222222222222222222222222222222222222222222222222222211111111111111111111111111111111
11111111111111111111111111111111226d26d2226d26d2226d26d2226d26d2226d26d2226d26d2226d26d2226d26d211111111111111111111111111111111
11111111111111111111111111111111222222222222222222222222222222222222222222222222222222222222222211111111111111111111111111111111
11111111111111111111111111111111222222222222222222222222222222222222222222222222222222222222222211111111111111111111111111111111
11111111111111111111111111111111226d26d2226d26d2226d26d2226d26d2226d26d2226d26d2226d26d2226d26d211111111111111111111111111111111
11111111111111111111111111111111222222222222222222222222222222222222222222222222222222222222222211111111111111111111111111111111
11111111111111111111111111111111222222222222222222222222222222222222222222222222222222222222222211111111111111111111111111111111
11111111111111111111111111111111226d26d2226d26d2226d26d2226d26d2226d26d2226d26d2226d26d2226d26d211111111111111111111111111111111
11111111111111111111111111111111222222222222222222222222222222222222222222222222222222222222222211111111111111111111111111111111
11111111111111111111111111111111226d26d2226d26d2226d26d2226d26d2226d26d2226d26d2226d26d2226d26d211111111111111111111111111111111
11111111111111111111111111111111226d26d2226d26d2226d26d2226d26d2226d26d2226d26d2226d26d2226d26d211111111111111111111111111111111
11111111111111111111111111111111222222222222222222222222222222222222222222222222222222222222222211111111111111111111111111111111
11111111111111111111111111111111226d26d2226d26d2226d26d2226d26d2226d26d2226d26d2226d26d2226d26d211111111111111111111111111111111
11111111111111111111111111111111226d26d2226d26d2226d26d2226d26d2226d26d2226d26d2226d26d2226d26d211111111111111111111111111111111
11111111111111111111111111111111226d26d2226d26d2226d26d2226d26d2226d26d2226d26d2226d26d2226d26d211111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111116111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111119919991999199919991111111116111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111191111911919191911911111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111199911911999199111911111111117111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111911911919191911911111111117111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111199111911919191911911111111119111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111199911991991199911111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111199919191919191111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111191919191919199111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111191919191919191111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111191919911999199911111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111116111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111117111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1111111111111111116a611111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
111111111111111167a9a76111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1111111111111111116a611111111111666666666666666666666666666666666666666666666666666666666666666611111111111111111111111111111111
11111111111111111117111111111111dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd11111111111111111111111111111111
1111111111111111111611111111111122222222222222e2e2222222222222222222222222222222222222222222222211111111111111111111111111111111
1111111111111111111111111111111122222222222222eee2ee22eee2eee2eee2eee2eee2eee22ee22222222222222211111111111111111111111111111111
11111111111111111111111111111111222222a2222222e2e2e2e22e22e2222e22e2e2e2e2ee22e222222222a222222211111111111111111116111111111111
1111111111111111111111111111111122222aaa222222eee2e2e22e22e2e22e22eee2ee22e22222e222222aaa22222211111111111111111117111111111111
11111111111111111111111111111111222aaaaaaa2222e2e2ee22eee2eee2eee2e222e2e2eee2ee22222aaaaaaa22221111111111111111116a611111111111
111111111111111111111111111111112222aaaaa222222222222222222222222222222222222222222222aaaaa22222111111111111111167a9a76111111111
111111111111111111111111111111112222a222a22222eee2ee22e2e2eee2ee22eee2e2e2eee2eee22222a222a222221111111111111111116a611111111111
1111111111111111111111111111111122222222222222e2e2e2e2e2e2ee22e2e22e22e2e2e2e2ee222222222222222211111111111111111117111111111111
1111111111111111111111111111111122222222222222eee2e2e2eee2e222e2e22e22e2e2ee22e2222222222222222211111111111111111116111111111111
1111111111111111111111111111111122222222222222e2e2ee222e22eee2e2e22e222ee2e2e2eee22222222222222211111111111111111111111111111111
11111111111111111111111111111111222222222222222222222222222222222222222222222222222222222222222211111111111111111111111111111111
11111111111111111111111111111111dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd11111111111111111111111111111111
11111111111111111111111111111111666666666666666666666666666666666666666666666666666666666666666611111111111111111111111111111111
11111111111111111111111111111111dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd11111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111161111111111118288888211111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111171111111111118288288211111111
111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111116a6111111111111828888811111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111167a9a761111111111111111111111111
111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111116a6111111111111118821111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111171111111111111111821111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111161111111111111828882111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222

__map__
232323232323232323232323232323230000000000000000000000000000000000000000000000000000000000000000002e2f0000000000000000000000000000000000000000000000000000000000232323232323232323232323232323230000000000000000000000000000000000000000000000000000000000000000
0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0000000000000000000000000000000000000017180000000000000000000000003e3f0000000000000000000000000031313131313131310000000000000000303030303030303030303030303030300000000000000000000000000000000000000000000000000000000000000000
1c1d1b1d1b1d1b1d1d1d1b1b1b1b1b1d000000000000000000000000000000000000171a1918000000000000000000000009090909090909090000000000000030303030303030300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1c1d1b1d1d1c1b1d001c1d1d1b1b1b1d000000000d0e0000000000000000000000171a00001918000000000000000000000a0a0a0a0a0a0a0a0000000000000000000000000000000000000000000000000000340000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1c1d1b1b1b001b1d00001c1d1d1b1b1d0000000d11110e0000000000000000000019180000171a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000034000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1c1c001c1b001d00000000001d1b1d1d0000001011110f00000000000000000000001918171a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003400000000000000000000000000000000000000000000000000000000000000000000
1b0000001b00000000000000001d000000000000100f00000000131400000000000000191a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000013121214000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000016121215000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000d0e00000000161500000000000000000000000000000017180000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000d11110e00000000000000000000000000000000000000171a191800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000001011110f000000000000000000000000000000000000171a00001918000000000000000000000000000000000000000000000000000000000000000000000034000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000100f0000000000000000000000000000000000000019180000171a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000001918171a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
09090909090909090909090909090909000000000000000000000000000000000000000000000000000000191a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000340033000000000000000000000000000000000000000000000000000000000000000000
0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000323232323232323232323232323232320000000000000000000000000000000000000000000000000000000000000000
__sfx__
0116071a3a2303820036230332002e2302a20027230252002e23027200252302e2002a230272002523025200272302c2002e23025200272302a2002c23025200272302c2002e23025200272302a2002c2302e200
010f071a22230202351e2301b235222301e2351b23019235222301b23519230222351e2301b23519230192351b2302023522230192351b2301e23520230192351b2302023522230192351b2301e2352023022235
010f071a2e4302c4302a430274302e4302a43027430254302e43027430254302e4302a430274302543025430274302c4302e43025430274302a4302c43025430274302c4302e43025430274302a4302c4302e430
010c00001c1411a141182611826100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
011000003054118500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
011000002435424355243540000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
011000003163433635240000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000030000
011000002826426265242640000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0107000033000330451f03024045270001e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
010600001f57639767004070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__music__
03 00424344
03 01424344
03 02424344

